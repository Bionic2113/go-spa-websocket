package models

import (
  "encoding/json"
)

type Task struct {
	Task_id     uint64 `json:"task_id,omitempty"`
	Title       string `json:"title"`
	Description string `json:"description"`
	Status      string `json:"status"` // –º–æ–∂–µ—Ç –ª—É—á—à–µ —Ö—Ä–∞–Ω–∏—Ç—å —á–∏—Å–ª–æ–º ü§î
	Time_start  int64  `json:"time_start"`
	Time_finish int64  `json:"time_finish"`
  User_email  string `json:"user_email,omitempty"`
}

// –∞ –Ω—É–∂–Ω—ã –ª–∏ –æ–Ω–∏ —Ç—É—Ç, –≤–µ–¥—å –∫–ª–∏–µ–Ω—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å?
const ( // –Ω–∞–±–æ—Ä —Å—Ç–∞—Ç—É—Å–æ–≤
	Pending   = "pending"   // –æ–∂–∏–¥–∞–µ—Ç
	Overdue   = "overdue"   // –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–æ
	Completed = "completed" // –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
	Deleted   = "deleted"   // —É–¥–∞–ª–µ–Ω–æ
)

func (t Task) Marshal() []byte{
  bytes, _ := json.Marshal(t)
  return bytes
}

func (t Task) Unmarshal(bytes []byte) (Task, error) {
  err := json.Unmarshal(bytes, &t)
  return t, err
}
